üìÑ Starting PDF-ONLY reprocessing...
Found 59 sessions to re-process PDFs for.
2025-06-09 15:00:23,084 - api.tasks - INFO - tasks - is_celery_available - 351 - Celery broker_url not configured.
üîÑ Running tasks synchronously.
  -> Processing 1/59: Session 54810
2025-06-09 15:00:23,176 - api.tasks - INFO - tasks - process_session_pdf - 3106 - üìÑ Processing PDF for session: 54810 (force=True, debug=False)
2025-06-09 15:00:23,291 - api.tasks - INFO - tasks - process_session_pdf - 3128 - üì• Downloading PDF from: https://record.assembly.go.kr/assembly/viewer/minutes/download/pdf.do?id=54810
2025-06-09 15:00:29,691 - api.tasks - INFO - tasks - process_session_pdf - 3139 - üì• PDF for session 54810 downloaded to temp_files/session_54810_1749481224.pdf
2025-06-09 15:00:29,739 - api.tasks - INFO - tasks - process_session_pdf - 3144 - Extracting text from 46 pages...
2025-06-09 15:00:33,424 - api.tasks - INFO - tasks - process_session_pdf - 3150 - Processed 20/46 pages...
2025-06-09 15:00:36,093 - api.tasks - INFO - tasks - process_session_pdf - 3150 - Processed 40/46 pages...
2025-06-09 15:00:36,943 - api.tasks - INFO - tasks - process_session_pdf - 3151 - üìÑ Extracted ~54285 chars from PDF.
2025-06-09 15:00:37,094 - api.tasks - ERROR - tasks - process_session_pdf - 3174 - ‚ùå Unexpected error processing PDF for session 54810: name 'process_pdf_text_for_statements' is not defined
2025-06-09 15:00:37,094 - api.tasks - ERROR - tasks - process_session_pdf - 3175 - Full traceback for PDF processing 54810:
Traceback (most recent call last):
  File "/home/runner/workspace/backend/api/management/commands/force_collection.py", line 190, in run_pdf_only_mode
    raise ImportError("Celery not available")
ImportError: Celery not available

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/workspace/backend/api/tasks.py", line 3161, in process_session_pdf
    process_pdf_text_for_statements(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'process_pdf_text_for_statements' is not defined. Did you mean: 'process_single_segment_for_statements'?
2025-06-09 15:00:37,106 - api.tasks - INFO - tasks - process_session_pdf - 3181 - üóëÔ∏è Deleted temporary PDF: temp_files/session_54810_1749481224.pdf
Failed to call function directly: name 'process_pdf_text_for_statements' is not defined
  -> Processing 2/59: Session 54609
2025-06-09 15:00:37,106 - api.tasks - INFO - tasks - process_session_pdf - 3106 - üìÑ Processing PDF for session: 54609 (force=True, debug=False)
2025-06-09 15:00:37,189 - api.tasks - INFO - tasks - process_session_pdf - 3128 - üì• Downloading PDF from: https://record.assembly.go.kr/assembly/viewer/minutes/download/pdf.do?id=54609
^C2025-06-09 15:00:39,217 - api.tasks - INFO - tasks - process_session_pdf - 3181 - üóëÔ∏è Deleted temporary PDF: temp_files/session_54609_1749481238.pdf
Traceback (most recent call last):
  File "/home/runner/workspace/backend/api/management/commands/force_collection.py", line 190, in run_pdf_only_mode
    raise ImportError("Celery not available")
ImportError: Celery not available

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/workspace/backend/manage.py", line 22, in <module>
    main()
  File "/home/runner/workspace/backend/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/django/core/management/__init__.py", line 442, in execute_from_command_line
    utility.execute()
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/django/core/management/__init__.py", line 436, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/django/core/management/base.py", line 413, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/django/core/management/base.py", line 459, in execute
    output = self.handle(*args, **options)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
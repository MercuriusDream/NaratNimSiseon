Following is the Google's AI Guidelines. FOLLOW THIS AT ALL COSTS

텍스트 생성

Gemini API는 Gemini 모델을 활용하여 텍스트, 이미지, 동영상, 오디오를 비롯한 다양한 입력에서 텍스트 출력을 생성할 수 있습니다.

다음은 단일 텍스트 입력을 사용하는 기본 예입니다.

Python
자바스크립트
Go
REST
Apps Script

from google import genai

client = genai.Client(api_key="GEMINI_API_KEY")

response = client.models.generate_content(
    model="gemini-2.0-flash",
    contents=["How does AI work?"]
)
print(response.text)

시스템 안내 및 구성
시스템 안내를 사용하여 Gemini 모델의 동작을 안내할 수 있습니다. 이렇게 하려면 GenerateContentConfig 객체를 전달합니다.

Python
자바스크립트
Go
REST
Apps Script

from google import genai
from google.genai import types

client = genai.Client(api_key="GEMINI_API_KEY")

response = client.models.generate_content(
    model="gemini-2.0-flash",
    config=types.GenerateContentConfig(
        system_instruction="You are a cat. Your name is Neko."),
    contents="Hello there"
)

print(response.text)
GenerateContentConfig 객체를 사용하면 온도와 같은 기본 생성 매개변수를 재정의할 수도 있습니다.

Python
자바스크립트
Go
REST
Apps Script

from google import genai
from google.genai import types

client = genai.Client(api_key="GEMINI_API_KEY")

response = client.models.generate_content(
    model="gemini-2.0-flash",
    contents=["Explain how AI works"],
    config=types.GenerateContentConfig(
        max_output_tokens=500,
        temperature=0.1
    )
)
print(response.text)
구성 가능한 매개변수와 설명의 전체 목록은 API 참조의 GenerateContentConfig를 참고하세요.

멀티모달 입력
Gemini API는 멀티모달 입력을 지원하므로 텍스트와 미디어 파일을 결합할 수 있습니다. 다음 예는 이미지를 제공하는 방법을 보여줍니다.

Python
자바스크립트
Go
REST
Apps Script

from PIL import Image
from google import genai

client = genai.Client(api_key="GEMINI_API_KEY")

image = Image.open("/path/to/organ.png")
response = client.models.generate_content(
    model="gemini-2.0-flash",
    contents=[image, "Tell me about this instrument"]
)
print(response.text)
이미지를 제공하는 다른 방법과 고급 이미지 처리에 관한 자세한 내용은 이미지 이해 가이드를 참고하세요. 이 API는 문서, 동영상, 오디오 입력 및 이해도 지원합니다.

스트리밍 응답
기본적으로 모델은 전체 생성 프로세스가 완료된 후에만 응답을 반환합니다.

더 원활한 상호작용을 위해 스트리밍을 사용하여 GenerateContentResponse 인스턴스가 생성될 때마다 점진적으로 수신합니다.

Python
자바스크립트
Go
REST
Apps Script

from google import genai

client = genai.Client(api_key="GEMINI_API_KEY")

response = client.models.generate_content_stream(
    model="gemini-2.0-flash",
    contents=["Explain how AI works"]
)
for chunk in response:
    print(chunk.text, end="")
멀티턴 대화 (채팅)
Google의 SDK는 여러 번의 프롬프트와 응답을 채팅으로 수집하는 기능을 제공하므로 대화 기록을 쉽게 추적할 수 있습니다.

참고: 채팅 기능은 SDK의 일부로만 구현됩니다. 백그라운드에서는 여전히 generateContent API를 사용합니다. 대화 차례가 여러 개인 경우 후속 차례마다 전체 대화 기록이 모델로 전송됩니다.
Python
자바스크립트
Go
REST
Apps Script

from google import genai

client = genai.Client(api_key="GEMINI_API_KEY")
chat = client.chats.create(model="gemini-2.0-flash")

response = chat.send_message("I have 2 dogs in my house.")
print(response.text)

response = chat.send_message("How many paws are in my house?")
print(response.text)

for message in chat.get_history():
    print(f'role - {message.role}',end=": ")
    print(message.parts[0].text)
스트리밍은 멀티턴 대화에도 사용할 수 있습니다.

Python
자바스크립트
Go
REST
Apps Script

from google import genai

client = genai.Client(api_key="GEMINI_API_KEY")
chat = client.chats.create(model="gemini-2.0-flash")

response = chat.send_message_stream("I have 2 dogs in my house.")
for chunk in response:
    print(chunk.text, end="")

response = chat.send_message_stream("How many paws are in my house?")
for chunk in response:
    print(chunk.text, end="")

for message in chat.get_history():
    print(f'role - {message.role}', end=": ")
    print(message.parts[0].text)
지원되는 모델
Gemini 계열의 모든 모델은 텍스트 생성을 지원합니다. 모델 및 기능에 대해 자세히 알아보려면 모델 페이지를 참고하세요.
